name: Playwright Snapshots Update

on:
  issue_comment:
    types: [created]

jobs:
  updatesnapshots:
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/update-snapshots'}}
    timeout-minutes: 60
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./rapidez/rapidez

    strategy:
      fail-fast: false
      matrix:
        include:
          # Just the latest, we don't need screenshots
          # taken with all Magento versions.
          - magento-version: 2.4.8-p1
            magento-php-version: php84-fpm
            rapidez-php-version: 8.4

    services:
      magento:
        image: michielgerritsen/magento-project-community-edition:${{matrix.magento-php-version}}-magento${{matrix.magento-version}}-sample-data
        env:
          URL: http://localhost:1234/
          FLAT_TABLES: true
          CUSTOM_ENTRYPOINT_COMMAND: "php bin/magento encryption:key:change -k 5AM3SD5SkwT8iwIxL6L1q8XQhzK3wk51; magerun2 config:store:set system/smtp/disable 1; magerun2 config:store:set checkout/options/enable_guest_checkout_login 1"
        ports:
          - 3307:3306
          - 1234:80

      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.18.2
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          http.cors.enabled: "true"
          http.cors.allow-credentials: "true"
          http.cors.allow-origin: "http://localhost:8000"
          http.cors.allow-headers: X-Requested-With, X-Auth-Token, Content-Type, Content-Length, Authorization, Access-Control-Allow-Headers, Accept
          xpack.security.enabled: "false"
        options: >-
          --health-cmd="curl http://localhost:9200/_cluster/health"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4
        with:
          path: rapidez/core
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4
        with:
          repository: rapidez/rapidez
          path: rapidez/rapidez

      - name: Get SHA and branch name
        id: get-branch-and-sha
        run: |
          sha_and_branch=$(\
            curl \
              -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
              https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.issue.number }} \
            | jq -r '.head.sha," ",.head.ref');
          echo "::set-output name=sha::$(echo $sha_and_branch | cut -d " " -f 1)";
          echo "::set-output name=branch::$(echo $sha_and_branch | cut -d " " -f 2)"

      - name: Fetch Branch
        run: git fetch

      - name: Checkout Branch
        working-directory: ./rapidez/core
        run: git checkout ${{ steps.get-branch-and-sha.outputs.branch }}

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.rapidez-php-version }}
          extensions: mbstring, dom, fileinfo, mysql
          coverage: none

      - name: Copy testing .env
        run: cp ../core/tests/playwright/.env.testing .env

      - name: Use rapidez/core from source
        run: composer config repositories.core path ../core

      - name: Get commit hash of core
        working-directory: ./rapidez/core
        run: echo "CORE_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Composer require the local rapidez/core
        run: composer require rapidez/core:"dev-${{ env.CORE_HASH }} as 4.1.0"

      - name: Install Rapidez command
        run: php artisan rapidez:install --frontendonly

      - name: Install Yarn dependencies
        run: npm install -g yarn && yarn

      - name: Install Playwright Browsers
        run: yarn playwright install --with-deps

      - name: Frontend Build
        run: yarn run prod

      - name: Install Playwright tests
        run: php artisan rapidez:install:tests

      - name: Wait for index to finish
        run: for i in {1..60}; do [[ $(mysql -h 127.0.0.1 -P 3307 -u magento -ppassword -ss -r -e "CALL sys.table_exists('magento', 'catalog_product_flat_1', @exists); SELECT @exists;") == *"BASE TABLE"* ]] && break || sleep 5; done

      - name: Rapidez index
        run: php artisan rapidez:index

      - name: Start the webserver
        run: php artisan serve &

      - name: Update snapshots
        run: yarn playwright test --update-snapshots --reporter=list

      - name: Move the screenshots
        run: cp -r tests/playwright/. ../core/tests/playwright/

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[CI] Update Snapshots"
          repository: rapidez/core
